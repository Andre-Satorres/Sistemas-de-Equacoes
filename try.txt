saber q coluna inserir esta variavel -->pegar pelo valor


iniciar a matrixz com 0..dessa forma, se a variavel n aPARECER NA EQUACAO, SUA COLUNA JA ESTARA 0 (OKKKKKK)


fazer uma logica pra primeira eq

as de+ tarao num for q fara oq esse ja faz, soq vai ver se eh numero ou letra. se ler um numero, le inteiro e pega a variavel correspondente. ve se a var tas na lista, ou seja, ta na primeira eq, e inserre o numeo na coluna com o valor da var. se ela n tiver na lista, coloca ela na coluna lis.qtdvariaveis

se ler um numero e dps dele vier um + ou -, somar ao valor da ulktima coluna da matriz. mudar pra +=

se ler um numero e dps dele vier um "/" e dps do "/" vier uma letra, dar erro, pq n eh linear mais...




            if(lis.qtdVariaveis < qtdequacoes) //significa que as outras variaveis nao tao na linha 1
            {
                int j;


                for(j = lis.qtdVariaveis; j<qtdequacoes; j++)
                {
                    printf("entrouuuuu");
                    printf("I e J: %i %i", indAtualLinha, j);
                    *(*(matriz+indAtualLinha)+j) = 0;
                    printf("%.2f", *(*(matriz+indAtualLinha)+j));
                }

            }

















while(i<qtdequacoes)
        {
            fgets(eqAtual, 255, arquivo);

            i++;

            tiraEspacosEmBranco(eqAtual, strlen(eqAtual));
            printf("Eq atual: %s", eqAtual);

            int index;

            for(index=0; index<strlen(eqAtual); index++)
            {
                printf("\nIndice: %i\n", index);
                if(isalpha(*(eqAtual+index))) //eh uma variavel
                {
                    printf("\nEh Letra: %c", eqAtual[index]);

                    char* aInserir = (char*)malloc(sizeof(char)*255);

                    int len = 0;

                    if(eraSinal==true) //ver se eh 1*x, no caso soh x
                    {
                        printf("\nVER: %i %i", indAtualColuna, indAtualLinha);
                        *(*(matriz + indAtualLinha) + indAtualColuna) = 1;
                        indAtualColuna++;
                    }

                    while(isalpha(*(eqAtual+index)))
                    {
                        *(aInserir + len) = *(eqAtual+index);

                        *(aInserir + len+1) = '\0';

                        len++;
                        index++;
                    }

                    index--;
                    printf("A inserir: %s\n", aInserir);

                    if(pesquisar(&lis, aInserir)==true)
                    {
                        printf("achou...");
                        continue;
                    }

                    insira(&lis, aInserir);

                    insiraValor(&lis, lis.qtdVariaveis, lis.qtdVariaveis-1);

                    printf("\nLista: ");
                    printeLista(lis);

                    printf("\nFIM\n\n");
                }
                else
                {
                    if(isdigit(*(eqAtual+index)))
                    {
                        printf("\nehNumero: %c\n", eqAtual[index]);
                        int va = *(eqAtual+index) - '0'; //precisa ser assim pra fazer string to int

                        double valor = va;

                        if(index>0 && (*(eqAtual+index-1)== '-'))
                            valor = -va;

                        index++;

                        while(isdigit(*(eqAtual+index)))
                        {
                            valor = valor*10 + *(eqAtual+index);
                            index++;
                        }

                        if(isalpha(*(eqAtual+index)))
                        {
                           printf("\nEh alpha: %c", eqAtual[index]);
                           char* aInserir = (char*)malloc(sizeof(char)*255);
                           int len =0;

                           while(isalpha(*(eqAtual+index)))
                           {
                                *(aInserir + len) = *(eqAtual+index);

                                *(aInserir + len+1) = '\0';
                                printf("\nA inserir deba: %s", aInserir);

                                len++;
                                index++;
                            }

                            index--;

                            index--;

                            if(pesquisar(&lis, aInserir)==true)
                            {
                                printf("\nValor: %i", pegarValor(lis, posicao(&lis, aInserir)));
                                *(*(matriz + indAtualLinha) + pegarValor(lis, posicao(&lis, aInserir))) = valor;

                                continue;
                            }

                        }

                        *(*(matriz + indAtualLinha) + indAtualColuna) = valor;
                        indAtualColuna++;

                        continue;

                    }

                    eraSinal = true;

                    if(*(eqAtual+index) == '+' || *(eqAtual+index)=='-' || *(eqAtual+index)=='*' || *(eqAtual+index)=='/')
                        continue;

                    if(*(eqAtual+index) == ' ')
                        continue;

                    if(*(eqAtual+index)=='=')
                        indAtualColuna = qtdequacoes;
                }
            }


            printf("mudar de linha\n");
            indAtualLinha++;
            indAtualColuna=0;

        }





if(*(eqAtual+index-i) == '*')
                        {
                            if(isdigit(*(eqAtual+index-i-1)))
                                coef = coef * (*(eqAtual+index-i-1) - '0');
                            else
                            {
                                printf("Erro na equacao...");
                                exit(0);
                            }
                        }
                        else
                        if(*(eqAtual+index-i) == '/')
                        {
                            if(isdigit(*(eqAtual+index-i)))
                                coef = coef / (*(eqAtual+index-i) - '0');
                            else
                            {
                                printf("Erro na equacao...");
                                exit(0);
                            }
                        }





if(eraMaisMenos==true && (strlen(eqAtual)>index+1) && (*(eqAtual+index+i)!='*') && (*(eqAtual+index+i)!='/') //ver se eh 1*x, no caso soh x
                    {
                        printf("\nVER: %i %i", indAtualColuna, indAtualLinha);
                        *(*(matriz + indAtualLinha) + indAtualColuna) = 1;
                        indAtualColuna++;
                    }
























double coef =1;

                    int i = 1;

                    while((index-1>0) && (*(eqAtual+index-i) == '*' || *(eqAtual+index-i) == '/' || isdigit(*(eqAtual+index-i))))
                        i = i-2;

                    while((strlen(eqAtual)>index+i) && (*(eqAtual+index+i) == '*' || *(eqAtual+index+i) == '/'))
                    {
                        if(*(eqAtual+index+i) == '*')
                        {
                            if(isdigit(*(eqAtual+index=i+1)))
                                coef = coef * (*(eqAtual+index+i+1) - '0');
                            else
                            {
                                printf("Erro na equacao...");
                                exit(0);
                            }
                        }
                        else
                        if(*(eqAtual+index+i) == '/')
                        {
                            if(isdigit(*(eqAtual+index+i)))
                                coef = coef / (*(eqAtual+index+i) - '0');
                            else
                            {
                                printf("Erro na equacao...");
                                exit(0);
                            }
                        }

                        i=i+2;
                    }

                    index += i;

                    *(*(matriz=indAtualLinha)+indAtualColuna) = coef;











if(isalpha(*(eqAtual+index)))
                        {
                           printf("\nEh alpha: %c", eqAtual[index]);
                           char* aInserir = (char*)malloc(sizeof(char)*255);
                           int len =0;

                           while(isalpha(*(eqAtual+index)))
                           {
                                *(aInserir + len) = *(eqAtual+index);

                                *(aInserir + len+1) = '\0';
                                printf("\nA inserir deba: %s", aInserir);

                                len++;
                                index++;
                            }

                            index--;

                            index--;

                            if(pesquisar(&lis, aInserir)==true)
                            {
                                printf("\nValor: %i", pegarValor(lis, posicao(&lis, aInserir)));
                                *(*(matriz + indAtualLinha) + pegarValor(lis, posicao(&lis, aInserir))) = valor;

                                continue;
                            }

                        }





if(*(eqAtual+index) == '+' || *(eqAtual+index)=='-') //+2, -2, +x, -x
                        eraMaisMenos = true;

                    if(*(eqAtual+index)=='*') // 2*x, 2*2, x*x
                    {
                        if(index==0)
                        {
                            printf("Equacao invalida!!!");
                            exit(0);
                        }

                        if(isdigit(*(eqAtual+index-1)))
                        {
                            if(strlen(eqAtual)<index+1) //caso termine com um "*", wtf
                            {
                                printf("Equacao invalida!!!");
                                exit(0);
                            }

                            if(isdigit(*(eqAtual+index+1)))
                            {
                                double valor = (*(eqAtual+index-1) - '0') * (*(eqAtual+index+1) - '0');

                                *(*(matriz+indAtualLinha)+indAtualColuna) += valor;

                                index++;
                            }
                        }
                    }

                    if(*(eqAtual+index)=='/') //2/x, 2/3, x/x, x/2
                    {
                        if(index==0)
                        {
                            printf("Equacao invalida!!!");
                            exit(0);
                        }
                    }

                    if(*(eqAtual+index) == ' ')
                        continue;